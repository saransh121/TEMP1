CREATE OR REPLACE PROCEDURE "USP_INS_COMMENTS" (
    p_COMMENTS          VARCHAR2,
    p_DATECREATED       TIMESTAMP,
    p_APPLICATION       VARCHAR2,
    p_EVENT_INSTANCE_ID VARCHAR2,
    p_USERNAME          VARCHAR2,
    p_TASK_ID           VARCHAR2,
    p_OPERATION_ID      VARCHAR2,
    p_CREATED_BY        VARCHAR2
) AS
    v_existing_comments VARCHAR2(4000);
BEGIN
    -- Check if a record already exists for the given TASK_ID
    SELECT COMMENTS
    INTO v_existing_comments
    FROM TBLCOMMENTS
    WHERE TASK_ID = p_TASK_ID
    FOR UPDATE;

    -- If a record exists, update the COMMENTS column
    UPDATE TBLCOMMENTS
    SET COMMENTS = v_existing_comments || ', ' || p_COMMENTS,
        DATECREATED = p_DATECREATED,
        APPLICATION = p_APPLICATION,
        EVENT_INSTANCE_ID = p_EVENT_INSTANCE_ID,
        USERNAME = p_USERNAME,
        OPERATION_ID = p_OPERATION_ID,
        CREATED_BY = p_CREATED_BY,
        CREATED_DATE = CURRENT_TIMESTAMP
    WHERE TASK_ID = p_TASK_ID;

    COMMIT;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- If no record exists, insert a new record
        INSERT INTO TBLCOMMENTS (
            COMMENTS,
            DATECREATED,
            APPLICATION,
            EVENT_INSTANCE_ID,
            USERNAME,
            TASK_ID,
            OPERATION_ID,
            CREATED_BY,
            CREATED_DATE
        )
        VALUES (
            p_COMMENTS,
            p_DATECREATED,
            p_APPLICATION,
            p_EVENT_INSTANCE_ID,
            p_USERNAME,
            p_TASK_ID,
            p_OPERATION_ID,
            p_CREATED_BY,
            CURRENT_TIMESTAMP
        );

        COMMIT;
END USP_INS_COMMENTS;