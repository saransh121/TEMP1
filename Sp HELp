CREATE OR REPLACE PROCEDURE USP_MANAGE_PL_LOAN_REQUEST
(
    P_CIF VARCHAR2,
    P_CIVIL VARCHAR2,
    P_TENUREWITHWAIVER VARCHAR2,
    P_LOANSCHEMECODE VARCHAR2,
    P_OPERATIVEACCTBRANCHCODE VARCHAR2,
    P_OPERATIVEACCTSCHEMECODE VARCHAR2,
    P_OPERATIVEACCTSCHEMETYPE VARCHAR2,
    P_OPERATIVEACCOUNT VARCHAR2,
    P_EMI VARCHAR2,
    P_DISBURSEDAMOUNT VARCHAR2,
    P_INTERESTRATE VARCHAR2,
    P_SPECIALINTERESTRATE VARCHAR2,
    P_LIFEINSURANCETYPE VARCHAR2,
    P_TYPEOFLOAN VARCHAR2,
    P_REPAYMENTSTARTSAFTER VARCHAR2,
    P_PURPOSEOFADAVANCE VARCHAR2,
    P_CUSTOMERNAME VARCHAR2,
    P_PROCESSINGFEE VARCHAR2,
    P_INSURANCEAMOUNT VARCHAR2,
    P_INSURANCEADMINFEE VARCHAR2,
    P_APPLICATION_NUMBER VARCHAR2,
    P_LOAN_ACCOUNT_NUMBER VARCHAR2,
    P_OD_ACCOUNT_NUMBER VARCHAR2,
    PARAM1 VARCHAR2,
    PARAM2 VARCHAR2,
    PARAM3 VARCHAR2,
    PARAM4 VARCHAR2,
    PARAM5 VARCHAR2,
    PARAM6 VARCHAR2,
    P_LOAN_ACCOUNT_NUMBERS VARCHAR2 -- Updated to VARCHAR2
)
AS
    v_loan_account_number VARCHAR2(50);
    v_index               PLS_INTEGER := 1;
    v_delimiter           CONSTANT VARCHAR2(1) := ','; -- Delimiter for splitting
BEGIN
    -- Insert into TBL_FACILITY_MB
    INSERT INTO sibawdb.TBL_FACILITY_MB(
        CIF,
        CIVIL,
        TENUREWITHWAIVER,
        LOANSCHEMECODE,
        OPERATIVEACCTBRANCHCODE,
        OPERATIVEACCTSCHEMECODE,
        OPERATIVEACCTSCHEMETYPE,
        OPERATIVEACCOUNT,
        EMI,
        DISBURSEDAMOUNT,
        INTERESTRATE,
        SPECIALINTERESTRATE,
        LIFEINSURANCETYPE,
        TYPEOFLOAN,
        REPAYMENTSTARTSAFTER,
        PURPOSEOFADAVANCE,
        CUSTOMERNAME,
        PROCESSINGFEE,
        INSURANCEAMOUNT,
        INSURANCEADMINFEE,
        APPLICATION_NUMBER,
        LOAN_ACCOUNT_NUMBER,
        OD_ACCOUNT_NUMBER
    )
    VALUES (
        P_CIF,
        P_CIVIL,
        P_TENUREWITHWAIVER,
        P_LOANSCHEMECODE,
        P_OPERATIVEACCTBRANCHCODE,
        P_OPERATIVEACCTSCHEMECODE,
        P_OPERATIVEACCTSCHEMETYPE,
        P_OPERATIVEACCOUNT,
        P_EMI,
        P_DISBURSEDAMOUNT,
        P_INTERESTRATE,
        P_SPECIALINTERESTRATE,
        P_LIFEINSURANCETYPE,
        P_TYPEOFLOAN,
        P_REPAYMENTSTARTSAFTER,
        P_PURPOSEOFADAVANCE,
        P_CUSTOMERNAME,
        P_PROCESSINGFEE,
        P_INSURANCEAMOUNT,
        P_INSURANCEADMINFEE,
        P_APPLICATION_NUMBER,
        P_LOAN_ACCOUNT_NUMBER,
        P_OD_ACCOUNT_NUMBER
    );

    -- Loop through the delimited string
    WHILE v_index <= LENGTH(P_LOAN_ACCOUNT_NUMBERS) LOOP
        v_loan_account_number := SUBSTR(
            P_LOAN_ACCOUNT_NUMBERS,
            v_index,
            INSTR(P_LOAN_ACCOUNT_NUMBERS || v_delimiter, v_delimiter, v_index) - v_index
        );
        
        -- Insert into TBL_LOAN_ACCOUNT_NUMBER_MB
        INSERT INTO sibawdb.TBL_LOAN_ACCOUNT_NUMBER_MB (
            APPLICATION_NUMBER,
            LOAN_ACCOUNT_NUMBER
        )
        VALUES (
            P_APPLICATION_NUMBER,
            v_loan_account_number
        );
        
        -- Move to the next account number
        v_index := INSTR(P_LOAN_ACCOUNT_NUMBERS || v_delimiter, v_delimiter, v_index) + 1;
    END LOOP;

    COMMIT;
    DBMS_OUTPUT.PUT_LINE('All account numbers processed successfully.');
END;