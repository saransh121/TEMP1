CREATE OR REPLACE PROCEDURE SP_INSERT_DIGITAL_LOAN_QUEUE (
    P_CRE_BRANCH_CODE         VARCHAR2,
    P_CRE_BRANCH_NAME         VARCHAR2,
    P_APPLICATION_NUMBER      VARCHAR2,
    P_CIF_ID                  VARCHAR2,
    P_CIVIL_ID                VARCHAR2,
    P_PURPOSE_OF_LOAN         VARCHAR2,
    P_HEIGHT                  VARCHAR2,
    P_WEIGHT                  VARCHAR2,
    P_JOB_TITLE               VARCHAR2,
    P_OCCUPATION              VARCHAR2,
    P_GROSSINCOME             VARCHAR2,
    P_LOAN_AMOUNT_REQUESTED   VARCHAR2,
    P_TENURE                  VARCHAR2,
    P_LOAN_ACCOUNT_NUMBERS    VARCHAR2,
    P_STATUS                  OUT NUMBER, -- Output to indicate success/failure
    P_MESSAGE                 OUT VARCHAR2 -- Output to provide details
) AS
    v_missing_fields VARCHAR2(4000);
BEGIN
    -- Validate mandatory fields
    v_missing_fields := '';

    IF P_CRE_BRANCH_CODE IS NULL THEN
        v_missing_fields := v_missing_fields || 'CRE_BRANCH_CODE, ';
    END IF;

    IF P_CRE_BRANCH_NAME IS NULL THEN
        v_missing_fields := v_missing_fields || 'CRE_BRANCH_NAME, ';
    END IF;

    IF P_APPLICATION_NUMBER IS NULL THEN
        v_missing_fields := v_missing_fields || 'APPLICATION_NUMBER, ';
    END IF;

    IF P_CIF_ID IS NULL THEN
        v_missing_fields := v_missing_fields || 'CIF_ID, ';
    END IF;

    IF P_CIVIL_ID IS NULL THEN
        v_missing_fields := v_missing_fields || 'CIVIL_ID, ';
    END IF;

    IF P_PURPOSE_OF_LOAN IS NULL THEN
        v_missing_fields := v_missing_fields || 'PURPOSE_OF_LOAN, ';
    END IF;

    -- If any mandatory fields are missing, set status and return
    IF v_missing_fields IS NOT NULL THEN
        P_STATUS := 1; -- Failure
        P_MESSAGE := 'Mandatory fields missing: ' || RTRIM(v_missing_fields, ', ');
        DBMS_OUTPUT.PUT_LINE(P_MESSAGE);
        RETURN;
    END IF;

    -- Insert data into the TBL_DIGITAL_LOAN_QUEUE table
    INSERT INTO sibawdb.TBL_DIGITAL_LOAN_QUEUE (
        CRE_BRANCH_CODE,
        CRE_BRANCH_NAME,
        APPLICATION_NUMBER,
        SEARCHPARAMETERFORLAUNCHING,
        STATUS,
        CIF_ID,
        CIVIL_ID,
        PURPOSE_OF_LOAN,
        HEIGHT,
        WEIGHT,
        JOB_TITLE,
        OCCUPATION,
        GROSSINCOME,
        LOAN_AMOUNT_REQUESTED,
        TENURE,
        LOAN_ACCOUNT_NUMBERS
    ) VALUES (
        P_CRE_BRANCH_CODE,
        P_CRE_BRANCH_NAME,
        P_APPLICATION_NUMBER,
        'CIF',
        'NEW',
        P_CIF_ID,
        P_CIVIL_ID,
        P_PURPOSE_OF_LOAN,
        P_HEIGHT,
        P_WEIGHT,
        P_JOB_TITLE,
        P_OCCUPATION,
        P_GROSSINCOME,
        P_LOAN_AMOUNT_REQUESTED,
        P_TENURE,
        P_LOAN_ACCOUNT_NUMBERS
    );

    -- Commit the transaction
    COMMIT;

    -- Set success status and message
    P_STATUS := 0; -- Success
    P_MESSAGE := 'Record inserted successfully.';
    DBMS_OUTPUT.PUT_LINE(P_MESSAGE);

EXCEPTION
    WHEN OTHERS THEN
        -- Handle exceptions, rollback, and set error message
        ROLLBACK;
        P_STATUS := 1; -- Failure
        P_MESSAGE := 'An error occurred: ' || SQLERRM;
        DBMS_OUTPUT.PUT_LINE(P_MESSAGE);
END SP_INSERT_DIGITAL_LOAN_QUEUE;